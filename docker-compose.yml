services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trip-optimizer-backend
    ports:
      - "${API_PORT:-8000}:${API_PORT:-8000}"
    env_file:
      - ./backend/env.development
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host ${API_HOST:-0.0.0.0} --port ${API_PORT:-8000} --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-8000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trip-optimizer-network

  # Storage API Service
  storage-api:
    build:
      context: ./storage-api
      dockerfile: Dockerfile
    container_name: trip-optimizer-storage-api
    ports:
      - "${STORAGE_API_PORT:-8001}:${STORAGE_API_PORT:-8001}"
    env_file:
      - ./storage-api/.env
    volumes:
      - ./storage-api:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port ${STORAGE_API_PORT:-8001} --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${STORAGE_API_PORT:-8001}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trip-optimizer-network

  # Auth API Service
  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    container_name: trip-optimizer-auth-api
    ports:
      - "${AUTH_API_PORT:-8003}:${AUTH_API_PORT:-8003}"
    env_file:
      - ./auth-api/env.development
    environment:
      - DATABASE_API_URL=http://database-api:8002
    depends_on:
      - database-api
      - mongodb
    volumes:
      - ./auth-api:/app
      - /app/node_modules
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${AUTH_API_PORT:-8003}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trip-optimizer-network

  # Database API Service
  database-api:
    build:
      context: ./database-api
      dockerfile: Dockerfile
    container_name: trip-optimizer-database-api
    ports:
      - "${DATABASE_API_PORT:-8002}:${DATABASE_API_PORT:-8002}"
    env_file:
      - ./database-api/env.development
    depends_on:
      - mongodb
    volumes:
      - ./database-api:/app
      - /app/node_modules
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${DATABASE_API_PORT:-8002}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trip-optimizer-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: trip-optimizer-mongodb
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-trip_optimizer}
    volumes:
      - mongodb_data:/data/db
      - ./database-api/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trip-optimizer-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: trip-optimizer-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000}"
    env_file:
      - ./frontend/.env.local
    depends_on:
      - backend
      - database-api
      - auth-api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONTEND_PORT:-3000}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trip-optimizer-network

networks:
  trip-optimizer-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local